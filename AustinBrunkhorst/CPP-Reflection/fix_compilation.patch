--- TypeInfo.h.orig	2025-08-09 05:00:00.000000000 +0000
+++ TypeInfo.h	2025-08-09 05:00:00.000000000 +0000
@@ -10,11 +10,7 @@
 
 #include <type_traits>
 
-#if defined(COMPILER_CLANG) || defined(COMPILER_GNU)
-
-#define IsTriviallyDefaultConstructible(x) std::has_trivial_default_constructor<x>::value
-
-#else
+#if defined(__GNUC__) && (__GNUC__ < 5)
 
 #define IsTriviallyDefaultConstructible(x) std::is_trivially_default_constructible<x>::value
 
--- Impl/TypeInfo.hpp.orig	2025-08-09 05:00:00.000000000 +0000
+++ Impl/TypeInfo.hpp	2025-08-09 05:00:00.000000000 +0000
@@ -50,13 +50,13 @@
         template<typename T>
         template<typename U>
         void TypeInfo<T>::addDefaultConstructor(
-            TypeData &data, 
-            typename std::enable_if< 
-                !IsTriviallyDefaultConstructible(U)
-            >::type*
+            TypeData &data
         )
         {
             // do nothing
         }
 
         template<typename T>
         template<typename U>
         void TypeInfo<T>::addDefaultConstructor(
-            TypeData &data, 
-            typename std::enable_if<
-                IsTriviallyDefaultConstructible(U)
-            >::type*
+            TypeData &data
         )
         {
             // add the good 'ol default constructor
             data.AddConstructor<T, false, false>( { } );
 
             // add the good 'ol dynamic default constructor
             data.AddConstructor<T, true, false>( { } );
         }